// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/jxsl13/plesgo/models"
)

// GetCliIDRefReader is a Reader for the GetCliIDRef structure.
type GetCliIDRefReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCliIDRefReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCliIDRefOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetCliIDRefNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetCliIDRefOK creates a GetCliIDRefOK with default headers values
func NewGetCliIDRefOK() *GetCliIDRefOK {
	return &GetCliIDRefOK{}
}

/* GetCliIDRefOK describes a response with status code 200, with default header values.

OK
*/
type GetCliIDRefOK struct {
	Payload *GetCliIDRefOKBody
}

func (o *GetCliIDRefOK) Error() string {
	return fmt.Sprintf("[GET /cli/{id}/ref][%d] getCliIdRefOK  %+v", 200, o.Payload)
}
func (o *GetCliIDRefOK) GetPayload() *GetCliIDRefOKBody {
	return o.Payload
}

func (o *GetCliIDRefOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetCliIDRefOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCliIDRefNotFound creates a GetCliIDRefNotFound with default headers values
func NewGetCliIDRefNotFound() *GetCliIDRefNotFound {
	return &GetCliIDRefNotFound{}
}

/* GetCliIDRefNotFound describes a response with status code 404, with default header values.

Command is not found
*/
type GetCliIDRefNotFound struct {
	Payload *models.ErrorResponse
}

func (o *GetCliIDRefNotFound) Error() string {
	return fmt.Sprintf("[GET /cli/{id}/ref][%d] getCliIdRefNotFound  %+v", 404, o.Payload)
}
func (o *GetCliIDRefNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetCliIDRefNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetCliIDRefOKBody get cli ID ref o k body
swagger:model GetCliIDRefOKBody
*/
type GetCliIDRefOKBody struct {

	// allowed commands
	AllowedCommands interface{} `json:"allowed_commands,omitempty"`

	// allowed options
	AllowedOptions interface{} `json:"allowed_options,omitempty"`
}

// Validate validates this get cli ID ref o k body
func (o *GetCliIDRefOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this get cli ID ref o k body based on context it is used
func (o *GetCliIDRefOKBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetCliIDRefOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetCliIDRefOKBody) UnmarshalBinary(b []byte) error {
	var res GetCliIDRefOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
