// Code generated by go-swagger; DO NOT EDIT.

package cli

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jxsl13/plesgo/models"
)

// PostCliIDCallReader is a Reader for the PostCliIDCall structure.
type PostCliIDCallReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostCliIDCallReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostCliIDCallOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewPostCliIDCallNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostCliIDCallOK creates a PostCliIDCallOK with default headers values
func NewPostCliIDCallOK() *PostCliIDCallOK {
	return &PostCliIDCallOK{}
}

/* PostCliIDCallOK describes a response with status code 200, with default header values.

OK
*/
type PostCliIDCallOK struct {
	Payload *models.CliCallResponse
}

func (o *PostCliIDCallOK) Error() string {
	return fmt.Sprintf("[POST /cli/{id}/call][%d] postCliIdCallOK  %+v", 200, o.Payload)
}
func (o *PostCliIDCallOK) GetPayload() *models.CliCallResponse {
	return o.Payload
}

func (o *PostCliIDCallOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CliCallResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostCliIDCallNotFound creates a PostCliIDCallNotFound with default headers values
func NewPostCliIDCallNotFound() *PostCliIDCallNotFound {
	return &PostCliIDCallNotFound{}
}

/* PostCliIDCallNotFound describes a response with status code 404, with default header values.

Command is not found
*/
type PostCliIDCallNotFound struct {
	Payload *models.ErrorResponse
}

func (o *PostCliIDCallNotFound) Error() string {
	return fmt.Sprintf("[POST /cli/{id}/call][%d] postCliIdCallNotFound  %+v", 404, o.Payload)
}
func (o *PostCliIDCallNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PostCliIDCallNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
