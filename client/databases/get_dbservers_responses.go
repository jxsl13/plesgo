// Code generated by go-swagger; DO NOT EDIT.

package databases

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jxsl13/plesgo/models"
)

// GetDbserversReader is a Reader for the GetDbservers structure.
type GetDbserversReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDbserversReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDbserversOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDbserversBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDbserversNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDbserversOK creates a GetDbserversOK with default headers values
func NewGetDbserversOK() *GetDbserversOK {
	return &GetDbserversOK{}
}

/* GetDbserversOK describes a response with status code 200, with default header values.

OK
*/
type GetDbserversOK struct {
	Payload []*models.DatabaseServer
}

func (o *GetDbserversOK) Error() string {
	return fmt.Sprintf("[GET /dbservers][%d] getDbserversOK  %+v", 200, o.Payload)
}
func (o *GetDbserversOK) GetPayload() []*models.DatabaseServer {
	return o.Payload
}

func (o *GetDbserversOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDbserversBadRequest creates a GetDbserversBadRequest with default headers values
func NewGetDbserversBadRequest() *GetDbserversBadRequest {
	return &GetDbserversBadRequest{}
}

/* GetDbserversBadRequest describes a response with status code 400, with default header values.

Invalid request data
*/
type GetDbserversBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *GetDbserversBadRequest) Error() string {
	return fmt.Sprintf("[GET /dbservers][%d] getDbserversBadRequest  %+v", 400, o.Payload)
}
func (o *GetDbserversBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetDbserversBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDbserversNotFound creates a GetDbserversNotFound with default headers values
func NewGetDbserversNotFound() *GetDbserversNotFound {
	return &GetDbserversNotFound{}
}

/* GetDbserversNotFound describes a response with status code 404, with default header values.

Server is not found
*/
type GetDbserversNotFound struct {
	Payload *models.ErrorResponse
}

func (o *GetDbserversNotFound) Error() string {
	return fmt.Sprintf("[GET /dbservers][%d] getDbserversNotFound  %+v", 404, o.Payload)
}
func (o *GetDbserversNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetDbserversNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
