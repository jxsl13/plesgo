// Code generated by go-swagger; DO NOT EDIT.

package databases

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jxsl13/plesgo/models"
)

// GetDbusersReader is a Reader for the GetDbusers structure.
type GetDbusersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDbusersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDbusersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDbusersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDbusersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDbusersOK creates a GetDbusersOK with default headers values
func NewGetDbusersOK() *GetDbusersOK {
	return &GetDbusersOK{}
}

/* GetDbusersOK describes a response with status code 200, with default header values.

OK
*/
type GetDbusersOK struct {
	Payload []*models.DatabaseUser
}

func (o *GetDbusersOK) Error() string {
	return fmt.Sprintf("[GET /dbusers][%d] getDbusersOK  %+v", 200, o.Payload)
}
func (o *GetDbusersOK) GetPayload() []*models.DatabaseUser {
	return o.Payload
}

func (o *GetDbusersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDbusersBadRequest creates a GetDbusersBadRequest with default headers values
func NewGetDbusersBadRequest() *GetDbusersBadRequest {
	return &GetDbusersBadRequest{}
}

/* GetDbusersBadRequest describes a response with status code 400, with default header values.

Invalid request data
*/
type GetDbusersBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *GetDbusersBadRequest) Error() string {
	return fmt.Sprintf("[GET /dbusers][%d] getDbusersBadRequest  %+v", 400, o.Payload)
}
func (o *GetDbusersBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetDbusersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDbusersNotFound creates a GetDbusersNotFound with default headers values
func NewGetDbusersNotFound() *GetDbusersNotFound {
	return &GetDbusersNotFound{}
}

/* GetDbusersNotFound describes a response with status code 404, with default header values.

Domain/database is not found
*/
type GetDbusersNotFound struct {
	Payload *models.ErrorResponse
}

func (o *GetDbusersNotFound) Error() string {
	return fmt.Sprintf("[GET /dbusers][%d] getDbusersNotFound  %+v", 404, o.Payload)
}
func (o *GetDbusersNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetDbusersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
