// Code generated by go-swagger; DO NOT EDIT.

package databases

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/jxsl13/plesgo/models"
)

// PostDbusersReader is a Reader for the PostDbusers structure.
type PostDbusersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostDbusersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostDbusersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostDbusersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostDbusersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostDbusersOK creates a PostDbusersOK with default headers values
func NewPostDbusersOK() *PostDbusersOK {
	return &PostDbusersOK{}
}

/* PostDbusersOK describes a response with status code 200, with default header values.

OK
*/
type PostDbusersOK struct {
	Payload *models.DatabaseUser
}

func (o *PostDbusersOK) Error() string {
	return fmt.Sprintf("[POST /dbusers][%d] postDbusersOK  %+v", 200, o.Payload)
}
func (o *PostDbusersOK) GetPayload() *models.DatabaseUser {
	return o.Payload
}

func (o *PostDbusersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DatabaseUser)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDbusersBadRequest creates a PostDbusersBadRequest with default headers values
func NewPostDbusersBadRequest() *PostDbusersBadRequest {
	return &PostDbusersBadRequest{}
}

/* PostDbusersBadRequest describes a response with status code 400, with default header values.

Invalid request data
*/
type PostDbusersBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *PostDbusersBadRequest) Error() string {
	return fmt.Sprintf("[POST /dbusers][%d] postDbusersBadRequest  %+v", 400, o.Payload)
}
func (o *PostDbusersBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PostDbusersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostDbusersNotFound creates a PostDbusersNotFound with default headers values
func NewPostDbusersNotFound() *PostDbusersNotFound {
	return &PostDbusersNotFound{}
}

/* PostDbusersNotFound describes a response with status code 404, with default header values.

Server/database/domain is not found
*/
type PostDbusersNotFound struct {
	Payload *models.ErrorResponse
}

func (o *PostDbusersNotFound) Error() string {
	return fmt.Sprintf("[POST /dbusers][%d] postDbusersNotFound  %+v", 404, o.Payload)
}
func (o *PostDbusersNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PostDbusersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
