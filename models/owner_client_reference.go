// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// OwnerClientReference owner client reference
//
// swagger:model OwnerClientReference
type OwnerClientReference struct {

	// The client GUID in the Plesk components (for example, Business Manager).
	// Example: b623e93d-dc72-4102-b5f0-ded427cf0fb1
	// Required: true
	ExternalID *string `json:"external_id"`

	// The global user ID of the client account just added to Plesk.
	// Example: b623e93d-dc72-4102-b5f0-ded427cf0fb1
	// Required: true
	GUID *string `json:"guid"`

	// The client's ID.
	// Example: 7
	// Required: true
	ID *int64 `json:"id"`

	// The login name of the client account owner.
	// Example: owner
	// Required: true
	Login *string `json:"login"`
}

// Validate validates this owner client reference
func (m *OwnerClientReference) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateExternalID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateGUID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLogin(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OwnerClientReference) validateExternalID(formats strfmt.Registry) error {

	if err := validate.Required("external_id", "body", m.ExternalID); err != nil {
		return err
	}

	return nil
}

func (m *OwnerClientReference) validateGUID(formats strfmt.Registry) error {

	if err := validate.Required("guid", "body", m.GUID); err != nil {
		return err
	}

	return nil
}

func (m *OwnerClientReference) validateID(formats strfmt.Registry) error {

	if err := validate.Required("id", "body", m.ID); err != nil {
		return err
	}

	return nil
}

func (m *OwnerClientReference) validateLogin(formats strfmt.Registry) error {

	if err := validate.Required("login", "body", m.Login); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this owner client reference based on context it is used
func (m *OwnerClientReference) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *OwnerClientReference) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OwnerClientReference) UnmarshalBinary(b []byte) error {
	var res OwnerClientReference
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
